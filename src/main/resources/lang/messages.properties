index.tile.start.title=Start a new assignment
index.tile.start.desc=Execute assignment for combined configuration, character list and users' preferences.

about-page.title=About
about-page.desc-intro=We love playing LARPs (live action role-playing game) and enjoy their organisation too. \
  However, there are several activities which must be done, but are repetitive and boring. One of them is also assigning characters to players.
about-page.desc-purpose=Moirai is an application which is intended to help automate this activity. \
  It supports two different approaches of player question forms. It has also several configuration options to satisfy \
  as much different games as possible.
about-page.desc-contact=Please, let us know if you miss any configuration option, every feedback is welcome. \
  The project is developed as an open source and is provided free of charge. Feel free to check the repository or even create a pull request. 

contact-page.title=Contact
contact-page.rolling-start=Developed under patronage of
contact-page.rolling=Rolling
contact-page.repository-start=The project github
contact-page.repository=repository
contact-page.trello-start=The Trello planning
contact-page.trello=board

assignment-config.title=1st step - configuration
assignment-config.desc=Define the assignment core configuration.

assignment-config.approach=Form type
assignment-config.approach.content=Content approach
assignment-config.rating-gender=Rating for gender
assignment-config.approach.characters=Characters approach
assignment-config.preferred-characters=Preferred characters
assignment-config.hated-characters=Not preferred characters
assignment-config.rating=Rating

assignment-config.generate=Generate JSON

assignment-config.import.title=Load configuration from file

characters-config.title=2nd step - characters
characters-config.desc=Set a list of characters with statistics required by the core configuration.
characters-config.loaded-chars=Number of defined characters
characters-config.import.title=Load characters from file

algorithm-config.title=3rd step - assignment
algorithm-config.desc=Execute assignment for combined configuration, character list and players' preferences.
algorithm-config.loaded-users=Number of loaded players
algorithm-config.algorithm=Assignment algorithm
algorithm-config.name.best-find-dfs=Approximately best solution
algorithm-config.execute-btn=Execute
algorithm-config.import.title=Load players from file

execution-results.title=Result
execution-results.desc=List of the best found assignments
execution-results.rating=Rating
execution-results.positive-assign=Positive assignments
execution-results.negative-assign=Negative assignments
execution-results.download-btn=Download solution

common.required-file-format=Required format of the file

common.close-btn=Close
common.next-btn=Next
common.previous-btn=Previous
common.load-file-btn=Load from file

common.choose-file=Choose file

error-page.title=Error
error-page.err-400=Wrong request.
error-page.err-404=Requested resource not found.
error-page.err-500=Something went wrong!

nav.home=Assignment
nav.about=About
nav.contact=Contact

javax.validation.constraints.AssertFalse.message     = Must be false
javax.validation.constraints.AssertTrue.message      = Must be true
javax.validation.constraints.DecimalMax.message      = Must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = Must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message          = Numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Email.message           = Must be a well-formed email address
javax.validation.constraints.Future.message          = Must be a future date
javax.validation.constraints.FutureOrPresent.message = Must be a date in the present or in the future
javax.validation.constraints.Max.message             = Must be less than or equal to {value}
javax.validation.constraints.Min.message             = Must be greater than or equal to {value}
javax.validation.constraints.Negative.message        = Must be less than 0
javax.validation.constraints.NegativeOrZero.message  = Must be less than or equal to 0
javax.validation.constraints.NotBlank.message        = Must not be blank
javax.validation.constraints.NotEmpty.message        = Must not be empty
javax.validation.constraints.NotNull.message         = Must not be null
javax.validation.constraints.Null.message            = Must be null
javax.validation.constraints.Past.message            = Must be a past date
javax.validation.constraints.PastOrPresent.message   = Must be a date in the past or in the present
javax.validation.constraints.Pattern.message         = Must match "{regexp}"
javax.validation.constraints.Positive.message        = Must be greater than 0
javax.validation.constraints.PositiveOrZero.message  = Must be greater than or equal to 0
javax.validation.constraints.Size.message            = Size must be between {min} and {max}
custom.validation.constraints.preferences.message    = Ratings must be defined for all ${numberField == 'numberOfPreferredCharacters' ? 'preferred' : 'non preferred'} characters